// Code generated by goa v3.1.1, DO NOT EDIT.
//
// category HTTP server encoders and decoders
//
// Command:
// $ goa gen github.com/tektoncd/hub/api/design

package server

import (
	"context"
	"net/http"

	category "github.com/tektoncd/hub/api/gen/category"
	goahttp "goa.design/goa/v3/http"
)

// EncodeCategoriesResponse returns an encoder for responses returned by the
// category Categories endpoint.
func EncodeCategoriesResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) func(context.Context, http.ResponseWriter, interface{}) error {
	return func(ctx context.Context, w http.ResponseWriter, v interface{}) error {
		res := v.(*category.CategoriesResult)
		enc := encoder(ctx, w)
		body := NewCategoriesResponseBody(res)
		w.WriteHeader(http.StatusOK)
		return enc.Encode(body)
	}
}

// marshalCategoryCategoryToCategoryResponseBody builds a value of type
// *CategoryResponseBody from a value of type *category.Category.
func marshalCategoryCategoryToCategoryResponseBody(v *category.Category) *CategoryResponseBody {
	if v == nil {
		return nil
	}
	res := &CategoryResponseBody{
		ID:   v.ID,
		Name: v.Name,
	}
	if v.Tags != nil {
		res.Tags = make([]*ResourceTagResponseBody, len(v.Tags))
		for i, val := range v.Tags {
			res.Tags[i] = marshalCategoryResourceTagToResourceTagResponseBody(val)
		}
	}

	return res
}

// marshalCategoryResourceTagToResourceTagResponseBody builds a value of type
// *ResourceTagResponseBody from a value of type *category.ResourceTag.
func marshalCategoryResourceTagToResourceTagResponseBody(v *category.ResourceTag) *ResourceTagResponseBody {
	res := &ResourceTagResponseBody{
		ID:   v.ID,
		Name: v.Name,
	}

	return res
}
