// Code generated by goa v3.1.1, DO NOT EDIT.
//
// resource client
//
// Command:
// $ goa gen github.com/tektoncd/hub/api/design

package resource

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "resource" service client.
type Client struct {
	AllEndpoint          goa.Endpoint
	AllVersionsEndpoint  goa.Endpoint
	GetRatingEndpoint    goa.Endpoint
	UpdateRatingEndpoint goa.Endpoint
}

// NewClient initializes a "resource" service client given the endpoints.
func NewClient(all, allVersions, getRating, updateRating goa.Endpoint) *Client {
	return &Client{
		AllEndpoint:          all,
		AllVersionsEndpoint:  allVersions,
		GetRatingEndpoint:    getRating,
		UpdateRatingEndpoint: updateRating,
	}
}

// All calls the "All" endpoint of the "resource" service.
func (c *Client) All(ctx context.Context, p *AllPayload) (res ResourceCollection, err error) {
	var ires interface{}
	ires, err = c.AllEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(ResourceCollection), nil
}

// AllVersions calls the "AllVersions" endpoint of the "resource" service.
func (c *Client) AllVersions(ctx context.Context, p *AllVersionsPayload) (res []*Resource, err error) {
	var ires interface{}
	ires, err = c.AllVersionsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]*Resource), nil
}

// GetRating calls the "GetRating" endpoint of the "resource" service.
func (c *Client) GetRating(ctx context.Context, p *GetRatingPayload) (res *ResourceRating, err error) {
	var ires interface{}
	ires, err = c.GetRatingEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ResourceRating), nil
}

// UpdateRating calls the "UpdateRating" endpoint of the "resource" service.
func (c *Client) UpdateRating(ctx context.Context, p *UpdateRatingPayload) (err error) {
	_, err = c.UpdateRatingEndpoint(ctx, p)
	return
}
